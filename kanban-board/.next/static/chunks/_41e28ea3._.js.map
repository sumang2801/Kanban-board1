{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/suman/Kanban-board1-2/kanban-board/src/components/ProtectedRoute.tsx"],"sourcesContent":["\"use client\";\nimport { useAuthenticationStatus } from \"@nhost/react\";\nimport { useRouter } from \"next/navigation\";\nimport { useEffect } from \"react\";\n\nexport default function ProtectedRoute({ children }: { children: React.ReactNode }) {\n  const { isAuthenticated, isLoading } = useAuthenticationStatus();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!isLoading && !isAuthenticated) {\n      router.replace(\"/auth\");\n    }\n  }, [isAuthenticated, isLoading, router]);\n\n  if (isLoading) return <div>Loading...</div>;\n  if (!isAuthenticated) return null;\n  return <>{children}</>;\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AACA;;;AAHA;;;;AAKe,SAAS,eAAe,KAA2C;QAA3C,EAAE,QAAQ,EAAiC,GAA3C;;IACrC,MAAM,EAAE,eAAe,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,kXAAA,CAAA,0BAAuB,AAAD;IAC7D,MAAM,SAAS,CAAA,GAAA,sSAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,8TAAA,CAAA,YAAS,AAAD;oCAAE;YACR,IAAI,CAAC,aAAa,CAAC,iBAAiB;gBAClC,OAAO,OAAO,CAAC;YACjB;QACF;mCAAG;QAAC;QAAiB;QAAW;KAAO;IAEvC,IAAI,WAAW,qBAAO,8VAAC;kBAAI;;;;;;IAC3B,IAAI,CAAC,iBAAiB,OAAO;IAC7B,qBAAO;kBAAG;;AACZ;GAbwB;;QACiB,kXAAA,CAAA,0BAAuB;QAC/C,sSAAA,CAAA,YAAS;;;KAFF","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///home/suman/Kanban-board1-2/kanban-board/src/app/boards/page.tsx"],"sourcesContent":["\"use client\";\nimport { useQuery, gql } from '@apollo/client';\nimport ProtectedRoute from '../../components/ProtectedRoute';\n\nconst GET_BOARDS = gql`\n  query GetBoards {\n    boards {\n      id\n      name\n    }\n  }\n`;\n\nexport default function BoardListPage() {\n  const { data, loading, error } = useQuery(GET_BOARDS);\n\n  return (\n    <ProtectedRoute>\n      {loading ? (\n        <div>Loading...</div>\n      ) : error ? (\n        <div>Error: {error.message}</div>\n      ) : (\n        <div>\n          <h1>Boards</h1>\n          <ul>\n            {data?.boards?.map((board: any) => (\n              <li key={board.id}>{board.name}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </ProtectedRoute>\n  );\n}\n"],"names":[],"mappings":";;;;;AACA;AAAA;AACA;;;;;;;;;;;;;AAFA;;;AAIA,MAAM,aAAa,CAAA,GAAA,sOAAA,CAAA,MAAG,AAAD;AASN,SAAS;QAaX;;IAZX,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,sXAAA,CAAA,WAAQ,AAAD,EAAE;IAE1C,qBACE,8VAAC,uIAAA,CAAA,UAAc;kBACZ,wBACC,8VAAC;sBAAI;;;;;mBACH,sBACF,8VAAC;;gBAAI;gBAAQ,MAAM,OAAO;;;;;;iCAE1B,8VAAC;;8BACC,8VAAC;8BAAG;;;;;;8BACJ,8VAAC;8BACE,iBAAA,4BAAA,eAAA,KAAM,MAAM,cAAZ,mCAAA,aAAc,GAAG,CAAC,CAAC,sBAClB,8VAAC;sCAAmB,MAAM,IAAI;2BAArB,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;AAO/B;GArBwB;;QACW,sXAAA,CAAA,WAAQ;;;KADnB","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///home/suman/Kanban-board1-2/kanban-board/node_modules/.pnpm/%40swc%2Bhelpers%400.5.15/node_modules/%40swc/helpers/esm/_tagged_template_literal.js"],"sourcesContent":["function _tagged_template_literal(strings, raw) {\n    if (!raw) raw = strings.slice(0);\n\n    return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));\n}\nexport { _tagged_template_literal as _ };\n"],"names":[],"mappings":";;;AAAA,SAAS,yBAAyB,OAAO,EAAE,GAAG;IAC1C,IAAI,CAAC,KAAK,MAAM,QAAQ,KAAK,CAAC;IAE9B,OAAO,OAAO,MAAM,CAAC,OAAO,gBAAgB,CAAC,SAAS;QAAE,KAAK;YAAE,OAAO,OAAO,MAAM,CAAC;QAAK;IAAE;AAC/F","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@apollo+client@3.13.9_@types+react@19.1.9_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.3__g_e81559768e85d9970267d55946937340/node_modules/@apollo/client/react/hooks/useSyncExternalStore.js","sourceRoot":"","sources":["file:///home/suman/Kanban-board1-2/kanban-board/node_modules/.pnpm/%40apollo%2Bclient%403.13.9_%40types%2Breact%4019.1.9_graphql-ws%406.0.6_graphql%4016.11.0_ws%408.18.3__g_e81559768e85d9970267d55946937340/node_modules/%40apollo/src/react/hooks/useSyncExternalStore.ts"],"sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"rehackt\";\n\nimport { canUseLayoutEffect } from \"../../utilities/index.js\";\n\nlet didWarnUncachedGetSnapshot = false;\n\ntype RealUseSESHookType =\n  // This import depends only on the @types/use-sync-external-store package, not\n  // the actual use-sync-external-store package, which is not installed. It\n  // might be nice to get this type from React 18, but it still needs to work\n  // when only React 17 or earlier is installed.\n  typeof import(\"use-sync-external-store\").useSyncExternalStore;\n\n// Prevent webpack from complaining about our feature detection of the\n// useSyncExternalStore property of the React namespace, which is expected not\n// to exist when using React 17 and earlier, and that's fine.\nconst uSESKey = \"useSyncExternalStore\" as keyof typeof React;\nconst realHook = React[uSESKey] as RealUseSESHookType | undefined;\n\n// Adapted from https://www.npmjs.com/package/use-sync-external-store, with\n// Apollo Client deviations called out by \"// DEVIATION ...\" comments.\n\n// When/if React.useSyncExternalStore is defined, delegate fully to it.\nexport const useSyncExternalStore: RealUseSESHookType =\n  realHook ||\n  ((subscribe, getSnapshot, getServerSnapshot) => {\n    // Read the current snapshot from the store on every render. Again, this\n    // breaks the rules of React, and only works here because of specific\n    // implementation details, most importantly that updates are\n    // always synchronous.\n    const value = getSnapshot();\n    if (\n      // DEVIATION: Using __DEV__\n      __DEV__ &&\n      !didWarnUncachedGetSnapshot &&\n      // DEVIATION: Not using Object.is because we know our snapshots will never\n      // be exotic primitive values like NaN, which is !== itself.\n      value !== getSnapshot()\n    ) {\n      didWarnUncachedGetSnapshot = true;\n      // DEVIATION: Using invariant.error instead of console.error directly.\n      invariant.error(\n        \"The result of getSnapshot should be cached to avoid an infinite loop\"\n      );\n    }\n\n    // Because updates are synchronous, we don't queue them. Instead we force a\n    // re-render whenever the subscribed state changes by updating an some\n    // arbitrary useState hook. Then, during render, we call getSnapshot to read\n    // the current value.\n    //\n    // Because we don't actually use the state returned by the useState hook, we\n    // can save a bit of memory by storing other stuff in that slot.\n    //\n    // To implement the early bailout, we need to track some things on a mutable\n    // object. Usually, we would put that in a useRef hook, but we can stash it in\n    // our useState hook instead.\n    //\n    // To force a re-render, we call forceUpdate({inst}). That works because the\n    // new object always fails an equality check.\n    const [{ inst }, forceUpdate] = React.useState({\n      inst: { value, getSnapshot },\n    });\n\n    // Track the latest getSnapshot function with a ref. This needs to be updated\n    // in the layout phase so we can access it during the tearing check that\n    // happens on subscribe.\n    if (canUseLayoutEffect) {\n      // DEVIATION: We avoid calling useLayoutEffect when !canUseLayoutEffect,\n      // which may seem like a conditional hook, but this code ends up behaving\n      // unconditionally (one way or the other) because canUseLayoutEffect is\n      // constant.\n      React.useLayoutEffect(() => {\n        Object.assign(inst, { value, getSnapshot });\n        // Whenever getSnapshot or subscribe changes, we need to check in the\n        // commit phase if there was an interleaved mutation. In concurrent mode\n        // this can happen all the time, but even in synchronous mode, an earlier\n        // effect may have mutated the store.\n        if (checkIfSnapshotChanged(inst)) {\n          // Force a re-render.\n          forceUpdate({ inst });\n        }\n        // React Hook React.useLayoutEffect has a missing dependency: 'inst'. Either include it or remove the dependency array.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [subscribe, value, getSnapshot]);\n    } else {\n      Object.assign(inst, { value, getSnapshot });\n    }\n\n    React.useEffect(() => {\n      // Check for changes right before subscribing. Subsequent changes will be\n      // detected in the subscription handler.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({ inst });\n      }\n\n      // Subscribe to the store and return a clean-up function.\n      return subscribe(function handleStoreChange() {\n        // TODO: Because there is no cross-renderer API for batching updates, it's\n        // up to the consumer of this library to wrap their subscription event\n        // with unstable_batchedUpdates. Should we try to detect when this isn't\n        // the case and print a warning in development?\n\n        // The store changed. Check if the snapshot changed since the last time we\n        // read from the store.\n        if (checkIfSnapshotChanged(inst)) {\n          // Force a re-render.\n          forceUpdate({ inst });\n        }\n      });\n      // React Hook React.useEffect has a missing dependency: 'inst'. Either include it or remove the dependency array.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [subscribe]);\n\n    return value;\n  });\n\nfunction checkIfSnapshotChanged<Snapshot>({\n  value,\n  getSnapshot,\n}: {\n  value: Snapshot;\n  getSnapshot: () => Snapshot;\n}): boolean {\n  try {\n    return value !== getSnapshot();\n  } catch {\n    return true;\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@apollo+client@3.13.9_@types+react@19.1.9_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.3__g_e81559768e85d9970267d55946937340/node_modules/@apollo/client/react/parser/index.js","sourceRoot":"","sources":["file:///home/suman/Kanban-board1-2/kanban-board/node_modules/.pnpm/%40apollo%2Bclient%403.13.9_%40types%2Breact%4019.1.9_graphql-ws%406.0.6_graphql%4016.11.0_ws%408.18.3__g_e81559768e85d9970267d55946937340/node_modules/%40apollo/src/react/parser/index.ts"],"sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\n\nimport type {\n  DocumentNode,\n  DefinitionNode,\n  VariableDefinitionNode,\n  OperationDefinitionNode,\n} from \"graphql\";\nimport {\n  AutoCleanedWeakCache,\n  cacheSizes,\n  defaultCacheSizes,\n} from \"../../utilities/index.js\";\nimport { registerGlobalCache } from \"../../utilities/caching/getMemoryInternals.js\";\n\nexport enum DocumentType {\n  Query,\n  Mutation,\n  Subscription,\n}\n\nexport interface IDocumentDefinition {\n  type: DocumentType;\n  name: string;\n  variables: ReadonlyArray<VariableDefinitionNode>;\n}\n\nlet cache:\n  | undefined\n  | AutoCleanedWeakCache<\n      DocumentNode,\n      {\n        name: string;\n        type: DocumentType;\n        variables: readonly VariableDefinitionNode[];\n      }\n    >;\n\nexport function operationName(type: DocumentType) {\n  let name;\n  switch (type) {\n    case DocumentType.Query:\n      name = \"Query\";\n      break;\n    case DocumentType.Mutation:\n      name = \"Mutation\";\n      break;\n    case DocumentType.Subscription:\n      name = \"Subscription\";\n      break;\n  }\n  return name;\n}\n\n// This parser is mostly used to safety check incoming documents.\nexport function parser(document: DocumentNode): IDocumentDefinition {\n  if (!cache) {\n    cache = new AutoCleanedWeakCache(\n      cacheSizes.parser || defaultCacheSizes.parser\n    );\n  }\n  const cached = cache.get(document);\n  if (cached) return cached;\n\n  let variables, type, name;\n\n  invariant(\n    !!document && !!document.kind,\n    `Argument of %s passed to parser was not a valid GraphQL ` +\n      `DocumentNode. You may need to use 'graphql-tag' or another method ` +\n      `to convert your operation into a document`,\n    document\n  );\n\n  const fragments: DefinitionNode[] = [];\n  const queries: DefinitionNode[] = [];\n  const mutations: DefinitionNode[] = [];\n  const subscriptions: DefinitionNode[] = [];\n\n  for (const x of document.definitions) {\n    if (x.kind === \"FragmentDefinition\") {\n      fragments.push(x);\n      continue;\n    }\n\n    if (x.kind === \"OperationDefinition\") {\n      switch (x.operation) {\n        case \"query\":\n          queries.push(x);\n          break;\n        case \"mutation\":\n          mutations.push(x);\n          break;\n        case \"subscription\":\n          subscriptions.push(x);\n          break;\n      }\n    }\n  }\n\n  invariant(\n    !fragments.length ||\n      queries.length ||\n      mutations.length ||\n      subscriptions.length,\n    `Passing only a fragment to 'graphql' is not yet supported. ` +\n      `You must include a query, subscription or mutation as well`\n  );\n\n  invariant(\n    queries.length + mutations.length + subscriptions.length <= 1,\n    `react-apollo only supports a query, subscription, or a mutation per HOC. ` +\n      `%s had %s queries, %s ` +\n      `subscriptions and %s mutations. ` +\n      `You can use 'compose' to join multiple operation types to a component`,\n    document,\n    queries.length,\n    subscriptions.length,\n    mutations.length\n  );\n\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n\n  const definitions =\n    queries.length ? queries\n    : mutations.length ? mutations\n    : subscriptions;\n\n  invariant(\n    definitions.length === 1,\n    `react-apollo only supports one definition per HOC. %s had ` +\n      `%s definitions. ` +\n      `You can use 'compose' to join multiple operation types to a component`,\n    document,\n    definitions.length\n  );\n\n  const definition = definitions[0] as OperationDefinitionNode;\n  variables = definition.variableDefinitions || [];\n\n  if (definition.name && definition.name.kind === \"Name\") {\n    name = definition.name.value;\n  } else {\n    name = \"data\"; // fallback to using data if no name\n  }\n\n  const payload = { name, type, variables };\n  cache.set(document, payload);\n  return payload;\n}\n\nparser.resetCache = () => {\n  cache = undefined;\n};\n\nif (__DEV__) {\n  registerGlobalCache(\"parser\", () => (cache ? cache.size : 0));\n}\n\nexport function verifyDocumentType(document: DocumentNode, type: DocumentType) {\n  const operation = parser(document);\n  const requiredOperationName = operationName(type);\n  const usedOperationName = operationName(operation.type);\n  invariant(\n    operation.type === type,\n    `Running a %s requires a graphql ` + `%s, but a %s was used instead.`,\n    requiredOperationName,\n    requiredOperationName,\n    usedOperationName\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@apollo+client@3.13.9_@types+react@19.1.9_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.3__g_e81559768e85d9970267d55946937340/node_modules/@apollo/client/react/hooks/useApolloClient.js","sourceRoot":"","sources":["file:///home/suman/Kanban-board1-2/kanban-board/node_modules/.pnpm/%40apollo%2Bclient%403.13.9_%40types%2Breact%4019.1.9_graphql-ws%406.0.6_graphql%4016.11.0_ws%408.18.3__g_e81559768e85d9970267d55946937340/node_modules/%40apollo/src/react/hooks/useApolloClient.ts"],"sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"rehackt\";\nimport type { ApolloClient } from \"../../core/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\n\n/**\n * @example\n * ```jsx\n * import { useApolloClient } from '@apollo/client';\n *\n * function SomeComponent() {\n *   const client = useApolloClient();\n *   // `client` is now set to the `ApolloClient` instance being used by the\n *   // application (that was configured using something like `ApolloProvider`)\n * }\n * ```\n *\n * @since 3.0.0\n * @returns The `ApolloClient` instance being used by the application.\n */\nexport function useApolloClient(\n  override?: ApolloClient<object>\n): ApolloClient<object> {\n  const context = React.useContext(getApolloContext());\n  const client = override || context.client;\n  invariant(\n    !!client,\n    'Could not find \"client\" in the context or passed in as an option. ' +\n      \"Wrap the root component in an <ApolloProvider>, or pass an ApolloClient \" +\n      \"instance in via options.\"\n  );\n\n  return client;\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,kCAAkC,CAAC;;AAC7D,OAAO,KAAK,KAAK,MAAM,SAAS,CAAC;AAEjC,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;;;;AAiBjD,SAAU,eAAe,CAC7B,QAA+B;IAE/B,IAAM,OAAO,oPAAG,KAAK,CAAC,OAAU,mYAAC,mBAAA,AAAgB,EAAE,CAAC,CAAC;IACrD,IAAM,MAAM,GAAG,QAAQ,IAAI,OAAO,CAAC,MAAM,CAAC;8ZAC1C,YAAA,AAAS,EACP,CAAC,CAAC,MAAM,EACR,oEAAoE;QAClE,GAAA,uEAA0E;MAI9E,EAHI,KAGG,MAAM,CAAC,cAHgB,CAC7B,CAAC,SAEY","debugId":null}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@apollo+client@3.13.9_@types+react@19.1.9_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.3__g_e81559768e85d9970267d55946937340/node_modules/@apollo/client/react/hooks/internal/wrapHook.js","sourceRoot":"","sources":["file:///home/suman/Kanban-board1-2/kanban-board/node_modules/.pnpm/%40apollo%2Bclient%403.13.9_%40types%2Breact%4019.1.9_graphql-ws%406.0.6_graphql%4016.11.0_ws%408.18.3__g_e81559768e85d9970267d55946937340/node_modules/%40apollo/src/react/hooks/internal/wrapHook.ts"],"sourcesContent":["import type {\n  useQuery,\n  useSuspenseQuery,\n  useBackgroundQuery,\n  useReadQuery,\n  useFragment,\n  useQueryRefHandlers,\n  useSuspenseFragment,\n} from \"../index.js\";\nimport type { QueryManager } from \"../../../core/QueryManager.js\";\nimport type { ApolloClient } from \"../../../core/ApolloClient.js\";\nimport type { ObservableQuery } from \"../../../core/ObservableQuery.js\";\nimport type { createQueryPreloader } from \"../../query-preloader/createQueryPreloader.js\";\n\nconst wrapperSymbol = Symbol.for(\"apollo.hook.wrappers\");\n\ninterface WrappableHooks {\n  createQueryPreloader: typeof createQueryPreloader;\n  useQuery: typeof useQuery;\n  useSuspenseQuery: typeof useSuspenseQuery;\n  useSuspenseFragment: typeof useSuspenseFragment;\n  useBackgroundQuery: typeof useBackgroundQuery;\n  useReadQuery: typeof useReadQuery;\n  useFragment: typeof useFragment;\n  useQueryRefHandlers: typeof useQueryRefHandlers;\n}\n\n/**\n * @internal\n * Can be used to correctly type the [Symbol.for(\"apollo.hook.wrappers\")] property of\n * `QueryManager`, to override/wrap hook functionality.\n */\nexport type HookWrappers = {\n  [K in keyof WrappableHooks]?: (\n    originalHook: WrappableHooks[K]\n  ) => WrappableHooks[K];\n};\n\ninterface QueryManagerWithWrappers<T> extends QueryManager<T> {\n  [wrapperSymbol]?: HookWrappers;\n}\n\n/**\n * @internal\n *\n * Makes an Apollo Client hook \"wrappable\".\n * That means that the Apollo Client instance can expose a \"wrapper\" that will be\n * used to wrap the original hook implementation with additional logic.\n * @example\n * ```tsx\n * // this is already done in `@apollo/client` for all wrappable hooks (see `WrappableHooks`)\n * // following this pattern\n * function useQuery() {\n *   return wrapHook('useQuery', _useQuery, options.client)(query, options);\n * }\n * function _useQuery(query, options) {\n *   // original implementation\n * }\n *\n * // this is what a library like `@apollo/client-react-streaming` would do\n * class ApolloClientWithStreaming extends ApolloClient {\n *   constructor(options) {\n *     super(options);\n *     this.queryManager[Symbol.for(\"apollo.hook.wrappers\")] = {\n *       useQuery: (original) => (query, options) => {\n *         console.log(\"useQuery was called with options\", options);\n *         return original(query, options);\n *       }\n *     }\n *   }\n * }\n *\n * // this will now log the options and then call the original `useQuery`\n * const client = new ApolloClientWithStreaming({ ... });\n * useQuery(query, { client });\n * ```\n */\nexport function wrapHook<Hook extends (...args: any[]) => any>(\n  hookName: keyof WrappableHooks,\n  useHook: Hook,\n  clientOrObsQuery: ObservableQuery<any> | ApolloClient<any>\n): Hook {\n  const queryManager = (\n    clientOrObsQuery as unknown as {\n      // both `ApolloClient` and `ObservableQuery` have a `queryManager` property\n      // but they're both `private`, so we have to cast around for a bit here.\n      queryManager: QueryManagerWithWrappers<any>;\n    }\n  )[\"queryManager\"];\n  const wrappers = queryManager && queryManager[wrapperSymbol];\n  const wrapper: undefined | ((wrap: Hook) => Hook) =\n    wrappers && (wrappers[hookName] as any);\n  return wrapper ? wrapper(useHook) : useHook;\n}\n"],"names":[],"mappings":";;;AAcA,IAAM,aAAa,GAAG,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;AA+DnD,SAAU,QAAQ,CACtB,QAA8B,EAC9B,OAAa,EACb,gBAA0D;IAE1D,IAAM,YAAY,GAChB,gBAKD,CAAC,cAAc,CAAC,CAAC;IAClB,IAAM,QAAQ,GAAG,YAAY,IAAI,YAAY,CAAC,aAAa,CAAC,CAAC;IAC7D,IAAM,OAAO,GACX,QAAQ,IAAK,QAAQ,CAAC,QAAQ,CAAS,CAAC;IAC1C,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;AAC9C,CAAC","debugId":null}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@apollo+client@3.13.9_@types+react@19.1.9_graphql-ws@6.0.6_graphql@16.11.0_ws@8.18.3__g_e81559768e85d9970267d55946937340/node_modules/@apollo/client/react/hooks/useQuery.js","sourceRoot":"","sources":["file:///home/suman/Kanban-board1-2/kanban-board/node_modules/.pnpm/%40apollo%2Bclient%403.13.9_%40types%2Breact%4019.1.9_graphql-ws%406.0.6_graphql%4016.11.0_ws%408.18.3__g_e81559768e85d9970267d55946937340/node_modules/%40apollo/src/react/hooks/useQuery.ts"],"sourcesContent":["/**\n * Function parameters in this file try to follow a common order for the sake of\n * readability and consistency. The order is as follows:\n *\n * resultData\n * observable\n * client\n * query\n * options\n * watchQueryOptions\n * makeWatchQueryOptions\n * isSSRAllowed\n * disableNetworkFetches\n * partialRefetch\n * renderPromises\n * isSyncSSR\n * callbacks\n */\n/** */\nimport { invariant } from \"../../utilities/globals/index.js\";\n\nimport * as React from \"rehackt\";\nimport { useSyncExternalStore } from \"./useSyncExternalStore.js\";\nimport { equal } from \"@wry/equality\";\n\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport type {\n  ApolloClient,\n  DefaultOptions,\n  OperationVariables,\n  WatchQueryFetchPolicy,\n  ApolloQueryResult,\n  DocumentNode,\n  TypedDocumentNode,\n  WatchQueryOptions,\n} from \"../../core/index.js\";\nimport { ObservableQuery, NetworkStatus } from \"../../core/index.js\";\nimport type {\n  QueryHookOptions,\n  QueryResult,\n  ObservableQueryFields,\n  NoInfer,\n} from \"../types/types.js\";\n\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nimport {\n  compact,\n  isNonEmptyArray,\n  maybeDeepFreeze,\n} from \"../../utilities/index.js\";\nimport { wrapHook } from \"./internal/index.js\";\nimport type { RenderPromises } from \"../ssr/RenderPromises.js\";\nimport type { MaybeMasked } from \"../../masking/index.js\";\n\nconst {\n  prototype: { hasOwnProperty },\n} = Object;\n\ntype InternalQueryResult<TData, TVariables extends OperationVariables> = Omit<\n  QueryResult<TData, TVariables>,\n  Exclude<keyof ObservableQueryFields<TData, TVariables>, \"variables\">\n>;\n\nfunction noop() {}\nconst lastWatchOptions = Symbol();\n\ninterface ObsQueryWithMeta<TData, TVariables extends OperationVariables>\n  extends ObservableQuery<TData, TVariables> {\n  [lastWatchOptions]?: WatchQueryOptions<TVariables, TData>;\n}\n\nexport interface InternalResult<TData, TVariables extends OperationVariables> {\n  // These members are populated by getCurrentResult and setResult, and it's\n  // okay/normal for them to be initially undefined.\n  current?: undefined | InternalQueryResult<TData, TVariables>;\n  previousData?: undefined | MaybeMasked<TData>;\n}\n\ninterface InternalState<TData, TVariables extends OperationVariables> {\n  client: ReturnType<typeof useApolloClient>;\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>;\n  observable: ObsQueryWithMeta<TData, TVariables>;\n  resultData: InternalResult<TData, TVariables>;\n}\n\nexport type UpdateInternalState<\n  TData,\n  TVariables extends OperationVariables,\n> = (state: InternalState<TData, TVariables>) => void;\n\ninterface Callbacks<TData> {\n  // Defining these methods as no-ops on the prototype allows us to call\n  // state.onCompleted and/or state.onError without worrying about whether a\n  // callback was provided.\n  onCompleted(data: MaybeMasked<TData>): void;\n  onError(error: ApolloError): void;\n}\n\n/**\n * A hook for executing queries in an Apollo application.\n *\n * To run a query within a React component, call `useQuery` and pass it a GraphQL query document.\n *\n * When your component renders, `useQuery` returns an object from Apollo Client that contains `loading`, `error`, and `data` properties you can use to render your UI.\n *\n * > Refer to the [Queries](https://www.apollographql.com/docs/react/data/queries) section for a more in-depth overview of `useQuery`.\n *\n * @example\n * ```jsx\n * import { gql, useQuery } from '@apollo/client';\n *\n * const GET_GREETING = gql`\n *   query GetGreeting($language: String!) {\n *     greeting(language: $language) {\n *       message\n *     }\n *   }\n * `;\n *\n * function Hello() {\n *   const { loading, error, data } = useQuery(GET_GREETING, {\n *     variables: { language: 'english' },\n *   });\n *   if (loading) return <p>Loading ...</p>;\n *   return <h1>Hello {data.greeting.message}!</h1>;\n * }\n * ```\n * @since 3.0.0\n * @param query - A GraphQL query document parsed into an AST by `gql`.\n * @param options - Options to control how the query is executed.\n * @returns Query result object\n */\nexport function useQuery<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options: QueryHookOptions<\n    NoInfer<TData>,\n    NoInfer<TVariables>\n  > = Object.create(null)\n): QueryResult<TData, TVariables> {\n  return wrapHook(\n    \"useQuery\",\n    // eslint-disable-next-line react-compiler/react-compiler\n    useQuery_,\n    useApolloClient(options && options.client)\n  )(query, options);\n}\n\nfunction useQuery_<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options: QueryHookOptions<NoInfer<TData>, NoInfer<TVariables>>\n) {\n  const { result, obsQueryFields } = useQueryInternals(query, options);\n  return React.useMemo(\n    () => ({ ...result, ...obsQueryFields }),\n    [result, obsQueryFields]\n  );\n}\n\nfunction useInternalState<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n>(\n  client: ApolloClient<object>,\n  query: DocumentNode | TypedDocumentNode<any, any>,\n  options: QueryHookOptions<NoInfer<TData>, NoInfer<TVariables>>,\n  renderPromises: RenderPromises | undefined,\n  makeWatchQueryOptions: () => WatchQueryOptions<TVariables, TData>\n) {\n  function createInternalState(previous?: InternalState<TData, TVariables>) {\n    verifyDocumentType(query, DocumentType.Query);\n\n    const internalState: InternalState<TData, TVariables> = {\n      client,\n      query,\n      observable:\n        // See if there is an existing observable that was used to fetch the same\n        // data and if so, use it instead since it will contain the proper queryId\n        // to fetch the result set. This is used during SSR.\n        (renderPromises &&\n          renderPromises.getSSRObservable(makeWatchQueryOptions())) ||\n        ObservableQuery[\"inactiveOnCreation\"].withValue(!renderPromises, () =>\n          client.watchQuery(\n            getObsQueryOptions(void 0, client, options, makeWatchQueryOptions())\n          )\n        ),\n      resultData: {\n        // Reuse previousData from previous InternalState (if any) to provide\n        // continuity of previousData even if/when the query or client changes.\n        previousData: previous?.resultData.current?.data,\n      },\n    };\n\n    return internalState as InternalState<TData, TVariables>;\n  }\n\n  let [internalState, updateInternalState] =\n    React.useState(createInternalState);\n\n  /**\n   * Used by `useLazyQuery` when a new query is executed.\n   * We keep this logic here since it needs to update things in unsafe\n   * ways and here we at least can keep track of that in a single place.\n   */\n  function onQueryExecuted(\n    watchQueryOptions: WatchQueryOptions<TVariables, TData>\n  ) {\n    // this needs to be set to prevent an immediate `resubscribe` in the\n    // next rerender of the `useQuery` internals\n    Object.assign(internalState.observable, {\n      [lastWatchOptions]: watchQueryOptions,\n    });\n    const resultData = internalState.resultData;\n    updateInternalState({\n      ...internalState,\n      // might be a different query\n      query: watchQueryOptions.query,\n      resultData: Object.assign(resultData, {\n        // We need to modify the previous `resultData` object as we rely on the\n        // object reference in other places\n        previousData: resultData.current?.data || resultData.previousData,\n        current: undefined,\n      }),\n    });\n  }\n\n  if (client !== internalState.client || query !== internalState.query) {\n    // If the client or query have changed, we need to create a new InternalState.\n    // This will trigger a re-render with the new state, but it will also continue\n    // to run the current render function to completion.\n    // Since we sometimes trigger some side-effects in the render function, we\n    // re-assign `state` to the new state to ensure that those side-effects are\n    // triggered with the new state.\n    const newInternalState = createInternalState(internalState);\n    updateInternalState(newInternalState);\n    return [newInternalState, onQueryExecuted] as const;\n  }\n\n  return [internalState, onQueryExecuted] as const;\n}\n\nexport function useQueryInternals<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options: QueryHookOptions<NoInfer<TData>, NoInfer<TVariables>>\n) {\n  const client = useApolloClient(options.client);\n\n  const renderPromises = React.useContext(getApolloContext()).renderPromises;\n  const isSyncSSR = !!renderPromises;\n  const disableNetworkFetches = client.disableNetworkFetches;\n  const ssrAllowed = options.ssr !== false && !options.skip;\n  const partialRefetch = options.partialRefetch;\n\n  const makeWatchQueryOptions = createMakeWatchQueryOptions(\n    client,\n    query,\n    options,\n    isSyncSSR\n  );\n\n  const [{ observable, resultData }, onQueryExecuted] = useInternalState(\n    client,\n    query,\n    options,\n    renderPromises,\n    makeWatchQueryOptions\n  );\n\n  const watchQueryOptions: Readonly<WatchQueryOptions<TVariables, TData>> =\n    makeWatchQueryOptions(observable);\n\n  useResubscribeIfNecessary<TData, TVariables>(\n    resultData, // might get mutated during render\n    observable, // might get mutated during render\n    client,\n    options,\n    watchQueryOptions\n  );\n\n  const obsQueryFields = React.useMemo(\n    () => bindObservableMethods(observable),\n    [observable]\n  );\n\n  useRegisterSSRObservable(observable, renderPromises, ssrAllowed);\n\n  const result = useObservableSubscriptionResult<TData, TVariables>(\n    resultData,\n    observable,\n    client,\n    options,\n    watchQueryOptions,\n    disableNetworkFetches,\n    partialRefetch,\n    isSyncSSR,\n    {\n      onCompleted: options.onCompleted || noop,\n      onError: options.onError || noop,\n    }\n  );\n\n  return {\n    result,\n    obsQueryFields,\n    observable,\n    resultData,\n    client,\n    onQueryExecuted,\n  };\n}\n\nfunction useObservableSubscriptionResult<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n>(\n  resultData: InternalResult<TData, TVariables>,\n  observable: ObservableQuery<TData, TVariables>,\n  client: ApolloClient<object>,\n  options: QueryHookOptions<NoInfer<TData>, NoInfer<TVariables>>,\n  watchQueryOptions: Readonly<WatchQueryOptions<TVariables, TData>>,\n  disableNetworkFetches: boolean,\n  partialRefetch: boolean | undefined,\n  isSyncSSR: boolean,\n  callbacks: {\n    onCompleted: (data: MaybeMasked<TData>) => void;\n    onError: (error: ApolloError) => void;\n  }\n) {\n  const callbackRef = React.useRef<Callbacks<TData>>(callbacks);\n  React.useEffect(() => {\n    // Make sure state.onCompleted and state.onError always reflect the latest\n    // options.onCompleted and options.onError callbacks provided to useQuery,\n    // since those functions are often recreated every time useQuery is called.\n    // Like the forceUpdate method, the versions of these methods inherited from\n    // InternalState.prototype are empty no-ops, but we can override them on the\n    // base state object (without modifying the prototype).\n    // eslint-disable-next-line react-compiler/react-compiler\n    callbackRef.current = callbacks;\n  });\n\n  const resultOverride =\n    (\n      (isSyncSSR || disableNetworkFetches) &&\n      options.ssr === false &&\n      !options.skip\n    ) ?\n      // If SSR has been explicitly disabled, and this function has been called\n      // on the server side, return the default loading state.\n      ssrDisabledResult\n    : options.skip || watchQueryOptions.fetchPolicy === \"standby\" ?\n      // When skipping a query (ie. we're not querying for data but still want to\n      // render children), make sure the `data` is cleared out and `loading` is\n      // set to `false` (since we aren't loading anything).\n      //\n      // NOTE: We no longer think this is the correct behavior. Skipping should\n      // not automatically set `data` to `undefined`, but instead leave the\n      // previous data in place. In other words, skipping should not mandate that\n      // previously received data is all of a sudden removed. Unfortunately,\n      // changing this is breaking, so we'll have to wait until Apollo Client 4.0\n      // to address this.\n      skipStandbyResult\n    : void 0;\n\n  const previousData = resultData.previousData;\n  const currentResultOverride = React.useMemo(\n    () =>\n      resultOverride &&\n      toQueryResult(resultOverride, previousData, observable, client),\n    [client, observable, resultOverride, previousData]\n  );\n\n  return useSyncExternalStore(\n    React.useCallback(\n      (handleStoreChange) => {\n        // reference `disableNetworkFetches` here to ensure that the rules of hooks\n        // keep it as a dependency of this effect, even though it's not used\n        disableNetworkFetches;\n\n        if (isSyncSSR) {\n          return () => {};\n        }\n\n        const onNext = () => {\n          const previousResult = resultData.current;\n          // We use `getCurrentResult()` instead of the onNext argument because\n          // the values differ slightly. Specifically, loading results will have\n          // an empty object for data instead of `undefined` for some reason.\n          const result = observable.getCurrentResult();\n          // Make sure we're not attempting to re-render similar results\n          if (\n            previousResult &&\n            previousResult.loading === result.loading &&\n            previousResult.networkStatus === result.networkStatus &&\n            equal(previousResult.data, result.data)\n          ) {\n            return;\n          }\n\n          setResult(\n            result,\n            resultData,\n            observable,\n            client,\n            partialRefetch,\n            handleStoreChange,\n            callbackRef.current\n          );\n        };\n\n        const onError = (error: Error) => {\n          subscription.current.unsubscribe();\n          subscription.current = observable.resubscribeAfterError(\n            onNext,\n            onError\n          );\n\n          if (!hasOwnProperty.call(error, \"graphQLErrors\")) {\n            // The error is not a GraphQL error\n            throw error;\n          }\n\n          const previousResult = resultData.current;\n          if (\n            !previousResult ||\n            (previousResult && previousResult.loading) ||\n            !equal(error, previousResult.error)\n          ) {\n            setResult(\n              {\n                data: (previousResult &&\n                  previousResult.data) as MaybeMasked<TData>,\n                error: error as ApolloError,\n                loading: false,\n                networkStatus: NetworkStatus.error,\n              },\n              resultData,\n              observable,\n              client,\n              partialRefetch,\n              handleStoreChange,\n              callbackRef.current\n            );\n          }\n        };\n\n        // TODO evaluate if we keep this in\n        // React Compiler cannot handle scoped `let` access, but a mutable object\n        // like this is fine.\n        // was:\n        // let subscription = observable.subscribe(onNext, onError);\n        const subscription = { current: observable.subscribe(onNext, onError) };\n\n        // Do the \"unsubscribe\" with a short delay.\n        // This way, an existing subscription can be reused without an additional\n        // request if \"unsubscribe\"  and \"resubscribe\" to the same ObservableQuery\n        // happen in very fast succession.\n        return () => {\n          setTimeout(() => subscription.current.unsubscribe());\n        };\n      },\n\n      [\n        disableNetworkFetches,\n        isSyncSSR,\n        observable,\n        resultData,\n        partialRefetch,\n        client,\n      ]\n    ),\n    () =>\n      currentResultOverride ||\n      getCurrentResult(\n        resultData,\n        observable,\n        callbackRef.current,\n        partialRefetch,\n        client\n      ),\n    () =>\n      currentResultOverride ||\n      getCurrentResult(\n        resultData,\n        observable,\n        callbackRef.current,\n        partialRefetch,\n        client\n      )\n  );\n}\n\nfunction useRegisterSSRObservable(\n  observable: ObsQueryWithMeta<any, any>,\n  renderPromises: RenderPromises | undefined,\n  ssrAllowed: boolean\n) {\n  if (renderPromises && ssrAllowed) {\n    renderPromises.registerSSRObservable(observable);\n\n    if (observable.getCurrentResult().loading) {\n      // TODO: This is a legacy API which could probably be cleaned up\n      renderPromises.addObservableQueryPromise(observable);\n    }\n  }\n}\n\n// this hook is not compatible with any rules of React, and there's no good way to rewrite it.\n// it should stay a separate hook that will not be optimized by the compiler\nfunction useResubscribeIfNecessary<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n>(\n  /** this hook will mutate properties on `resultData` */\n  resultData: InternalResult<TData, TVariables>,\n  /** this hook will mutate properties on `observable` */\n  observable: ObsQueryWithMeta<TData, TVariables>,\n  client: ApolloClient<object>,\n  options: QueryHookOptions<NoInfer<TData>, NoInfer<TVariables>>,\n  watchQueryOptions: Readonly<WatchQueryOptions<TVariables, TData>>\n) {\n  if (\n    observable[lastWatchOptions] &&\n    !equal(observable[lastWatchOptions], watchQueryOptions)\n  ) {\n    // Though it might be tempting to postpone this reobserve call to the\n    // useEffect block, we need getCurrentResult to return an appropriate\n    // loading:true result synchronously (later within the same call to\n    // useQuery). Since we already have this.observable here (not true for\n    // the very first call to useQuery), we are not initiating any new\n    // subscriptions, though it does feel less than ideal that reobserve\n    // (potentially) kicks off a network request (for example, when the\n    // variables have changed), which is technically a side-effect.\n    observable.reobserve(\n      getObsQueryOptions(observable, client, options, watchQueryOptions)\n    );\n\n    // Make sure getCurrentResult returns a fresh ApolloQueryResult<TData>,\n    // but save the current data as this.previousData, just like setResult\n    // usually does.\n    resultData.previousData =\n      resultData.current?.data || resultData.previousData;\n    resultData.current = void 0;\n  }\n  observable[lastWatchOptions] = watchQueryOptions;\n}\n\n/*\n * A function to massage options before passing them to ObservableQuery.\n * This is two-step curried because we want to reuse the `make` function,\n * but the `observable` might differ between calls to `make`.\n */\nexport function createMakeWatchQueryOptions<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n>(\n  client: ApolloClient<object>,\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  {\n    skip,\n    ssr,\n    onCompleted,\n    onError,\n    defaultOptions,\n    // The above options are useQuery-specific, so this ...otherOptions spread\n    // makes otherOptions almost a WatchQueryOptions object, except for the\n    // query property that we add below.\n    ...otherOptions\n  }: QueryHookOptions<TData, TVariables> = {},\n  isSyncSSR: boolean\n) {\n  return (\n    observable?: ObservableQuery<TData, TVariables>\n  ): WatchQueryOptions<TVariables, TData> => {\n    // This Object.assign is safe because otherOptions is a fresh ...rest object\n    // that did not exist until just now, so modifications are still allowed.\n    const watchQueryOptions: WatchQueryOptions<TVariables, TData> =\n      Object.assign(otherOptions, { query });\n\n    if (\n      isSyncSSR &&\n      (watchQueryOptions.fetchPolicy === \"network-only\" ||\n        watchQueryOptions.fetchPolicy === \"cache-and-network\")\n    ) {\n      // this behavior was added to react-apollo without explanation in this PR\n      // https://github.com/apollographql/react-apollo/pull/1579\n      watchQueryOptions.fetchPolicy = \"cache-first\";\n    }\n\n    if (!watchQueryOptions.variables) {\n      watchQueryOptions.variables = {} as TVariables;\n    }\n\n    if (skip) {\n      // When skipping, we set watchQueryOptions.fetchPolicy initially to\n      // \"standby\", but we also need/want to preserve the initial non-standby\n      // fetchPolicy that would have been used if not skipping.\n      watchQueryOptions.initialFetchPolicy =\n        watchQueryOptions.initialFetchPolicy ||\n        watchQueryOptions.fetchPolicy ||\n        getDefaultFetchPolicy(defaultOptions, client.defaultOptions);\n      watchQueryOptions.fetchPolicy = \"standby\";\n    } else if (!watchQueryOptions.fetchPolicy) {\n      watchQueryOptions.fetchPolicy =\n        observable?.options.initialFetchPolicy ||\n        getDefaultFetchPolicy(defaultOptions, client.defaultOptions);\n    }\n\n    return watchQueryOptions;\n  };\n}\n\nexport function getObsQueryOptions<\n  TData,\n  TVariables extends OperationVariables,\n>(\n  observable: ObservableQuery<TData, TVariables> | undefined,\n  client: ApolloClient<object>,\n  queryHookOptions: QueryHookOptions<TData, TVariables>,\n  watchQueryOptions: Partial<WatchQueryOptions<TVariables, TData>>\n): WatchQueryOptions<TVariables, TData> {\n  const toMerge: Array<Partial<WatchQueryOptions<TVariables, TData>>> = [];\n\n  const globalDefaults = client.defaultOptions.watchQuery;\n  if (globalDefaults) toMerge.push(globalDefaults);\n\n  if (queryHookOptions.defaultOptions) {\n    toMerge.push(queryHookOptions.defaultOptions);\n  }\n\n  // We use compact rather than mergeOptions for this part of the merge,\n  // because we want watchQueryOptions.variables (if defined) to replace\n  // this.observable.options.variables whole. This replacement allows\n  // removing variables by removing them from the variables input to\n  // useQuery. If the variables were always merged together (rather than\n  // replaced), there would be no way to remove existing variables.\n  // However, the variables from options.defaultOptions and globalDefaults\n  // (if provided) should be merged, to ensure individual defaulted\n  // variables always have values, if not otherwise defined in\n  // observable.options or watchQueryOptions.\n  toMerge.push(compact(observable && observable.options, watchQueryOptions));\n\n  return toMerge.reduce(mergeOptions) as WatchQueryOptions<TVariables, TData>;\n}\n\nfunction setResult<TData, TVariables extends OperationVariables>(\n  nextResult: ApolloQueryResult<MaybeMasked<TData>>,\n  resultData: InternalResult<TData, TVariables>,\n  observable: ObservableQuery<TData, TVariables>,\n  client: ApolloClient<object>,\n  partialRefetch: boolean | undefined,\n  forceUpdate: () => void,\n  callbacks: Callbacks<TData>\n) {\n  const previousResult = resultData.current;\n  if (previousResult && previousResult.data) {\n    resultData.previousData = previousResult.data;\n  }\n\n  if (!nextResult.error && isNonEmptyArray(nextResult.errors)) {\n    // Until a set naming convention for networkError and graphQLErrors is\n    // decided upon, we map errors (graphQLErrors) to the error options.\n    // TODO: Is it possible for both result.error and result.errors to be\n    // defined here?\n    nextResult.error = new ApolloError({ graphQLErrors: nextResult.errors });\n  }\n\n  resultData.current = toQueryResult(\n    unsafeHandlePartialRefetch(nextResult, observable, partialRefetch),\n    resultData.previousData,\n    observable,\n    client\n  );\n  // Calling state.setResult always triggers an update, though some call sites\n  // perform additional equality checks before committing to an update.\n  forceUpdate();\n  handleErrorOrCompleted(nextResult, previousResult?.networkStatus, callbacks);\n}\n\nfunction handleErrorOrCompleted<TData>(\n  result: ApolloQueryResult<MaybeMasked<TData>>,\n  previousNetworkStatus: NetworkStatus | undefined,\n  callbacks: Callbacks<TData>\n) {\n  if (!result.loading) {\n    const error = toApolloError(result);\n\n    // wait a tick in case we are in the middle of rendering a component\n    Promise.resolve()\n      .then(() => {\n        if (error) {\n          callbacks.onError(error);\n        } else if (\n          result.data &&\n          previousNetworkStatus !== result.networkStatus &&\n          result.networkStatus === NetworkStatus.ready\n        ) {\n          callbacks.onCompleted(result.data);\n        }\n      })\n      .catch((error) => {\n        invariant.warn(error);\n      });\n  }\n}\n\nfunction getCurrentResult<TData, TVariables extends OperationVariables>(\n  resultData: InternalResult<TData, TVariables>,\n  observable: ObservableQuery<TData, TVariables>,\n  callbacks: Callbacks<TData>,\n  partialRefetch: boolean | undefined,\n  client: ApolloClient<object>\n): InternalQueryResult<TData, TVariables> {\n  // Using this.result as a cache ensures getCurrentResult continues returning\n  // the same (===) result object, unless state.setResult has been called, or\n  // we're doing server rendering and therefore override the result below.\n  if (!resultData.current) {\n    // WARNING: SIDE-EFFECTS IN THE RENDER FUNCTION\n    // this could call unsafeHandlePartialRefetch\n    setResult(\n      observable.getCurrentResult(),\n      resultData,\n      observable,\n      client,\n      partialRefetch,\n      () => {},\n      callbacks\n    );\n  }\n  return resultData.current!;\n}\n\nexport function getDefaultFetchPolicy<\n  TData,\n  TVariables extends OperationVariables,\n>(\n  queryHookDefaultOptions?: Partial<WatchQueryOptions<TVariables, TData>>,\n  clientDefaultOptions?: DefaultOptions\n): WatchQueryFetchPolicy {\n  return (\n    queryHookDefaultOptions?.fetchPolicy ||\n    clientDefaultOptions?.watchQuery?.fetchPolicy ||\n    \"cache-first\"\n  );\n}\n\nexport function toApolloError<TData>(\n  result: Pick<ApolloQueryResult<TData>, \"errors\" | \"error\">\n): ApolloError | undefined {\n  return isNonEmptyArray(result.errors) ?\n      new ApolloError({ graphQLErrors: result.errors })\n    : result.error;\n}\n\nexport function toQueryResult<TData, TVariables extends OperationVariables>(\n  result: ApolloQueryResult<MaybeMasked<TData>>,\n  previousData: MaybeMasked<TData> | undefined,\n  observable: ObservableQuery<TData, TVariables>,\n  client: ApolloClient<object>\n): InternalQueryResult<TData, TVariables> {\n  const { data, partial, ...resultWithoutPartial } = result;\n  const queryResult: InternalQueryResult<TData, TVariables> = {\n    data, // Ensure always defined, even if result.data is missing.\n    ...resultWithoutPartial,\n    client: client,\n    observable: observable,\n    variables: observable.variables,\n    called: result !== ssrDisabledResult && result !== skipStandbyResult,\n    previousData,\n  };\n  return queryResult;\n}\n\nfunction unsafeHandlePartialRefetch<\n  TData,\n  TVariables extends OperationVariables,\n>(\n  result: ApolloQueryResult<MaybeMasked<TData>>,\n  observable: ObservableQuery<TData, TVariables>,\n  partialRefetch: boolean | undefined\n): ApolloQueryResult<MaybeMasked<TData>> {\n  // TODO: This code should be removed when the partialRefetch option is\n  // removed. I was unable to get this hook to behave reasonably in certain\n  // edge cases when this block was put in an effect.\n  if (\n    result.partial &&\n    partialRefetch &&\n    !result.loading &&\n    (!result.data || Object.keys(result.data).length === 0) &&\n    observable.options.fetchPolicy !== \"cache-only\"\n  ) {\n    observable.refetch();\n    return {\n      ...result,\n      loading: true,\n      networkStatus: NetworkStatus.refetch,\n    };\n  }\n  return result;\n}\n\nconst ssrDisabledResult = maybeDeepFreeze({\n  loading: true,\n  data: void 0 as any,\n  error: void 0,\n  networkStatus: NetworkStatus.loading,\n});\n\nconst skipStandbyResult = maybeDeepFreeze({\n  loading: false,\n  data: void 0 as any,\n  error: void 0,\n  networkStatus: NetworkStatus.ready,\n});\n\nfunction bindObservableMethods<TData, TVariables extends OperationVariables>(\n  observable: ObservableQuery<TData, TVariables>\n): Omit<ObservableQueryFields<TData, TVariables>, \"variables\"> {\n  return {\n    refetch: observable.refetch.bind(observable),\n    reobserve: observable.reobserve.bind(observable),\n    fetchMore: observable.fetchMore.bind(observable),\n    updateQuery: observable.updateQuery.bind(observable),\n    startPolling: observable.startPolling.bind(observable),\n    stopPolling: observable.stopPolling.bind(observable),\n    subscribeToMore: observable.subscribeToMore.bind(observable),\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 940, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/graphql-tag@2.12.6_graphql@16.11.0/node_modules/graphql-tag/lib/index.js","sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1074, "column": 0}, "map": {"version":3,"sources":["file:///home/suman/Kanban-board1-2/kanban-board/node_modules/.pnpm/next%4015.4.6_%40babel%2Bcore%407.28.0_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}